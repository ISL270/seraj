name: "Build & Release"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest  # Switched to fastest runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: "oracle"
          java-version: "17"

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.0"
          channel: "stable"

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        if: ${{ env.KEYSTORE_BASE64 != '' }}
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        if: ${{ env.KEYSTORE_BASE64 != '' }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "storePassword=${KEYSTORE_PASSWORD}" > android/key.properties
          echo "keyPassword=${KEY_PASSWORD}" >> android/key.properties
          echo "keyAlias=${KEY_ALIAS}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK
        run: flutter build apk --release --flavor prod --target lib/flavors/development/main_development.dart

      - name: Build App Bundle
        run: flutter build appbundle --flavor prod --target lib/flavors/development/main_development.dart

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "Releases"
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

      - name: Extract version from pubspec
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        env:
          RELEASE_TOKEN: ${{ secrets.TOKEN }}
        with:
          artifacts: |
            build/app/outputs/flutter-apk/app-release.apk,
            build/app/outputs/bundle/release/app-release.aab
          tag: "v${{ env.VERSION }}"
          token: ${{ env.RELEASE_TOKEN }}